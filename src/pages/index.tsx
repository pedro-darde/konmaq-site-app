import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { useEffect } from "react";
import styles from "../../styles/Home.module.css";
import OpenPageComponent from "../components/OpenPageComponent";
import { ProductAdded, ProductWithFiles } from "../interfaces/Product";
import { baseService } from "../services/api";
import { Category, CategoryPage } from "../interfaces/Category";

type HomeProps = {
  product: { releases: ProductWithFiles[]; popular: ProductWithFiles[] };
  pageCategories: CategoryPage[];
  categories: Category[];
};
export default function Home({
  product,
  pageCategories,
  categories,
}: HomeProps) {
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <OpenPageComponent
          product={product}
          pageCategories={pageCategories}
          categories={categories}
        />
      </main>

      <footer className={styles.footer}>
        <a
          href="https://github.com/pedro-darde"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{"@pedro_darde"}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

export const getServerSideProps: GetServerSideProps = async (context) => {
  const promiseProductHome = baseService.get<{
    releases: ProductWithFiles[];
    popular: ProductWithFiles[];
  }>("product-homepage");

  const promisePageCategories =
    baseService.get<CategoryPage[]>("pages/category");

  const promiseCategories = baseService.get<Category[]>("category");

  const [{ data: product }, { data: pageCategories }, { data: categories }] =
    await Promise.all([
      promiseProductHome,
      promisePageCategories,
      promiseCategories,
    ]);

  return {
    props: { product, pageCategories, categories }, // will be passed to the page component as props
  };
};
